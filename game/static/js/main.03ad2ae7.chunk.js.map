{"version":3,"sources":["context/index.jsx","shared/variables.js","components/Typography/Typography.jsx","components/TextField/TextField.jsx","components/Button/Button.jsx","components/Icon/Icon.jsx","app/WelcomeScreen/WelcomeScreen.jsx","app/GameScreen/constants.js","app/GameScreen/components/DropArea.jsx","app/GameScreen/components/LogoCard.jsx","images/zoovu-z.svg","images/zoovu-o.svg","images/zoovu-v.svg","images/zoovu-u.svg","app/GameScreen/sections/GSDroppableArea.jsx","app/GameScreen/sections/GSHeader.jsx","app/GameScreen/sections/GSPickupCards.jsx","app/GameScreen/GameScreen.jsx","app/ResultScreen/ResultScreen.jsx","app/ScreenHandler/ScreenHandler.jsx","images/zoovu-bg.svg","fonts/Campton-Bold.woff2","fonts/Campton-Light.woff2","App.jsx","reportWebVitals.js","index.js"],"names":["Context","React","createContext","gameInterval","errorTimeout","ContextProvider","props","setName","name","setState","startGame","state","gameStarted","clearInterval","setInterval","score","endGame","gameOver","addTimeOnError","clearTimeout","error","setTimeout","resetGame","Provider","value","this","children","Component","breakpoints","colors","primary","secondary","dark","white","border","gray","transition","property","time","Array","isArray","map","prop","index","defaultVariantMapping","h1","styled","color","h2","body1","p","body2","Typography","component","variant","className","defaultProps","undefined","StInput","input","TextFied","StButton","button","Button","Icon","classnames","StRoot","div","StTextField","TextField","StForm","form","WelcomeScreen","useContext","id","onSubmit","e","preventDefault","target","autoComplete","placeholder","required","data-role","memo","ItemTypes","CardTypes","dropConfig","expected","dropped","StArea","hasChild","moveIndex","DropArea","handleDrop","useDrop","accept","drop","item","canDrop","monitor","source","collect","isOverItem","isOver","getItem","ref","hasError","variantMapping","z","o","v","u","StCard","isDragging","StImg","img","LogoCard","onBegin","useDrag","type","begin","drag","data-variant","src","alt","StSpan","span","GSDroppableArea","data","StLeft","StRight","STScoreContainer","StScore","StIcon","GSHeader","data-score","StPlaceholder","GSPickupCards","i","GameScreen","useState","shuffle","pickupCards","setPickupCards","dropAreas","setDropAreas","useCallback","droppedArea","droppedCard","card","area","useEffect","every","resetTimeout","StContainer","ResultScreen","style","margin","onClick","ScreenHandler","GlobalStyle","createGlobalStyle","CamptonLight","CamptonBold","zoovuBg","App","DndProvider","backend","HTML5Backend","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03ad2ae7.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst Context = React.createContext()\n\nlet gameInterval = null\nlet errorTimeout = null\n\nexport class ContextProvider extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      score: 0,\n      error: false,\n      gameStarted: false,\n      gameOver: false\n    }\n  }\n\n  setName = (name) => {\n    this.setState({ name })\n  }\n\n  startGame = () => {\n    if (this.state.gameStarted) return\n    this.setState({ gameStarted: true })\n\n    clearInterval(gameInterval)\n    gameInterval = setInterval(() => {\n      this.setState(({ score }) => ({ score: score + 1 }))\n    }, 1000)\n  }\n\n  endGame = () => {\n    clearInterval(gameInterval)\n    this.setState({ gameOver: true, gameStarted: false })\n  }\n\n  addTimeOnError = () => {\n    clearTimeout(errorTimeout)\n    this.setState(({ score }) => ({ score: score + 10, error: true }), () => {\n      errorTimeout = setTimeout(() => {\n        this.setState({ error: false })\n      }, 500)\n    })\n  }\n\n  resetGame = () => {\n    this.setState({ score: 0, gameOver: false, gameStarted: false })\n  }\n\n  render () {\n    return (\n      <Context.Provider value={{\n        ...this.state,\n        setName: this.setName,\n        resetGame: this.resetGame,\n        startGame: this.startGame,\n        addTimeOnError: this.addTimeOnError,\n        endGame: this.endGame\n      }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    )\n  }\n}\n\nexport default Context\n","import { map } from 'lodash'\n\nexport const breakpoints = {\n  xs: '(min-width: 0px)',\n  sm: '(min-width: 600px)',\n  md: '(min-width: 960px)',\n  lg: '(min-width: 1280px)',\n  xl: '(min-width: 1920px)'\n}\n\nexport const colors = {\n  primary: '#3B0078',\n  secondary: '#00E5B1',\n  dark: '#333333',\n  white: '#FFFFFF',\n  border: '#D6DCE7',\n  gray: '#97A1B5',\n  error: '#f44336'\n}\n\nexport const transition = (property, time) => {\n  if (Array.isArray(property)) {\n    return `\n      transition: ${map(property, (prop, index) => (\n        `${prop} ${Array.isArray(time) ? time[index] : time} cubic-bezier(0.19, 1, 0.22, 1)`\n      ))};\n      will-change: ${map(property, (prop, index) => `${prop}`)};\n    `\n  }\n\n  return `\n    transition: ${property} ${time} cubic-bezier(0.19, 1, 0.22, 1);\n    will-change: ${property};\n  `\n}\n","import React from 'react'\nimport { PropTypes } from 'prop-types'\nimport styled from 'styled-components'\nimport { colors } from '../../shared/variables'\n\nconst StH1 = styled.h1`\n  color: ${({ color }) => colors[color]};\n  margin: 0;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 34px;\n  letter-spacing: 0.01em;\n`\nconst StH2 = styled.h2`\n  color: ${({ color }) => colors[color]};\n  margin: 0;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 34px;\n  letter-spacing: 0.04em;\n`\nconst StBody1 = styled.p`\n  color: ${({ color }) => colors[color]};\n  margin: 0;\n  font-weight: 300;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.085em;\n`\nconst StBody2 = styled.p`\n  color: ${({ color }) => colors[color]};\n  margin: 0;\n  font-weight: 300;\n  font-size: 20px;\n  line-height: 24px;\n  letter-spacing: 0.05em;\n`\n\nconst defaultVariantMapping = {\n  h1: StH1,\n  h2: StH2,\n  body1: StBody1,\n  body2: StBody2\n}\n\nconst Typography = ({ component, className, variant, ...props }) => {\n  const Component = component || defaultVariantMapping[variant] || 'span'\n\n  return (\n    <Component\n      {...props}\n    />\n  )\n}\n\nTypography.propTypes = {\n  variant: PropTypes.oneOf([\n    'h1',\n    'h2',\n    'body1',\n    'body2'\n  ]),\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'dark',\n    'white',\n    'border',\n    'gray'\n  ]),\n  component: PropTypes.string\n}\n\nTypography.defaultProps = {\n  variant: 'body1',\n  color: undefined,\n  component: undefined\n}\n\nexport default Typography\n","import React from 'react'\nimport styled from 'styled-components'\nimport { colors, transition } from '../../shared/variables'\n\nconst StInput = styled.input`\n  width: 100%;\n  padding: 0;\n  margin: 0;\n  background-color: transparent;\n  border: 0;\n  height: 24px;\n  border-bottom: 2px solid ${colors.border};\n  min-height: 80px;\n  font-family: inherit;\n  font-size: 28px;\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 34px;\n  letter-spacing: 0.04em;\n  color: ${colors.primary};\n  text-align: center;\n  ${transition('border-color', '0.5s')}\n\n  &:focus {\n    outline: none;\n    border-bottom: 2px solid ${colors.primary};\n  }\n\n  &::placeholder {\n    color: ${colors.gray};\n    font-weight: 400;\n    font-style: oblique;\n  }\n`\n\nconst TextFied = (props) => {\n  return (\n    <StInput {...props} />\n  )\n}\n\nexport default TextFied\n","import React from 'react'\nimport styled from 'styled-components'\nimport { colors, transition } from '../../shared/variables'\n\nconst StButton = styled.button`\n  background-color: ${colors.white};\n  border: 2px solid ${colors.border};\n  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.1);\n  height: 70px;\n  border-radius: 35px;\n  margin: 0;\n  font-weight: 700;\n  font-size: 24px;\n  letter-spacing: 0.01em;\n  padding: 0 36px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${colors.primary};\n  ${transition('all', '0.5s')};\n  cursor: pointer;\n\n  &:hover {\n    transform: scale(1.05);\n    background-color: ${colors.primary};\n    color: ${colors.white};\n    border-color: ${colors.primary};\n  }\n\n  & .material-icons {\n    font-size: 30px;\n    margin-left: 8px;\n    margin-right: -16px;\n  }\n`\n\nconst Button = (props) => {\n  return (\n    <StButton {...props} />\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport classnames from 'classnames'\n\nconst Icon = ({ className, ...props }) => {\n  return (\n    <i className={classnames('material-icons', className)} {...props} />\n  )\n}\n\nexport default Icon\n","import React, { useContext } from 'react'\nimport { TextField, Typography, Button, Icon } from '../../components'\nimport Context from '../../context'\nimport styled from 'styled-components'\n\nconst StRoot = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 64px 16px;\n  min-height: 100%;\n`\nconst StTextField = styled(TextField)`\n  margin: 64px 0;\n`\n\nconst StForm = styled.form`\n  width: 100%;\n  max-width: 632px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst WelcomeScreen = () => {\n  const { setName } = useContext(Context)\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setName(e.target.name.value)\n  }\n\n  return (\n    <StRoot id='welcome-screen'>\n      <StForm onSubmit={handleSubmit} autoComplete='off'>\n        <Typography variant='h1'>Hello friend, tell me your name...</Typography>\n        <StTextField\n          name='name'\n          placeholder='Your name here'\n          required\n        />\n        <Button data-role='submit'>Lets go <Icon>arrow_right_alt</Icon></Button>\n      </StForm>\n    </StRoot>\n  )\n}\n\nexport default React.memo(WelcomeScreen)\n","export const ItemTypes = {\n  CARD: 'card'\n}\n\nexport const CardTypes = [{\n  id: 'z',\n  variant: 'z'\n}, {\n  id: 'o-1',\n  variant: 'o'\n}, {\n  id: 'o-2',\n  variant: 'o'\n}, {\n  id: 'v',\n  variant: 'v'\n}, {\n  id: 'u',\n  variant: 'u'\n}]\n\nexport const dropConfig = [{\n  id: 'd-z',\n  expected: 'z',\n  dropped: null\n}, {\n  id: 'd-o-1',\n  expected: 'o',\n  dropped: null\n}, {\n  id: 'd-o-2',\n  expected: 'o',\n  dropped: null\n}, {\n  id: 'd-v',\n  expected: 'v',\n  dropped: null\n}, {\n  id: 'd-u',\n  expected: 'u',\n  dropped: null\n}]\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { breakpoints, colors, transition } from '../../../shared/variables'\nimport { useDrop } from 'react-dnd'\nimport { ItemTypes } from '../constants'\n\nconst StArea = styled.div`\n  border-radius: 8px;\n  position: relative;\n  border: 2px dashed ${colors.secondary};\n  border: ${({ hasChild }) => hasChild && 'none'};\n  ${transition('border-color', '0.5s')}\n\n  @media ${breakpoints.sm} {\n    border-radius: 16px;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    margin-top: 100%;\n  }\n\n  & > * {\n    position: absolute !important;\n    top: -2px;\n    left: -2px;\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    z-index: 2;\n    ${({ moveIndex }) => moveIndex && transition('transform', '0.6s')}\n    transform: ${({ moveIndex }) => moveIndex && (`\n      translateX(calc((100% + 16px) * ${moveIndex}))\n    `)};\n\n    @media ${breakpoints.md} {\n      transform: ${({ moveIndex }) => moveIndex && `translateX(calc((100% + 32px) * ${moveIndex}))`};\n    }\n  }\n`\n\nconst DropArea = ({\n  children,\n  id,\n  handleDrop,\n  dropped,\n  expected,\n  index,\n  ...props\n}) => {\n  const [{ isOverItem }, drop] = useDrop({\n    accept: ItemTypes.CARD,\n    drop: (item) => handleDrop({ id, expected, dropped }, item),\n    canDrop: ({ source }, monitor) => (\n      source === 'droppableArea' || (source === 'pickupArea' && !dropped)\n    ),\n    collect: (monitor) => ({\n      isOverItem: monitor.isOver() ? monitor.getItem() : null\n    })\n  })\n\n  return (\n    <StArea\n      ref={drop}\n      moveIndex={!!isOverItem && ((index - isOverItem.index) * -1)}\n      data-role='drop-area'\n      {...props}\n    >\n      {children}\n    </StArea>\n  )\n}\n\nDropArea.propTypes = {\n  id: PropTypes.string,\n  handleDrop: PropTypes.func,\n  dropped: PropTypes.object,\n  expected: PropTypes.string\n}\n\nDropArea.defaultProps = {\n  hasError: false,\n  id: undefined,\n  handleDrop: () => {}\n}\n\nexport default React.memo(DropArea)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { useDrag } from 'react-dnd'\nimport { breakpoints, colors } from '../../../shared/variables'\nimport { ItemTypes } from '../constants'\n\nimport ImgZ from '../../../images/zoovu-z.svg'\nimport ImgO from '../../../images/zoovu-o.svg'\nimport ImgV from '../../../images/zoovu-v.svg'\nimport ImgU from '../../../images/zoovu-u.svg'\n\nconst variantMapping = {\n  z: ImgZ,\n  o: ImgO,\n  v: ImgV,\n  u: ImgU\n}\n\nconst StCard = styled.div`\n  background: ${colors.white};\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.05), 0px 3px 4px rgba(0, 0, 0, 0.03), 0px 1px 5px rgba(0, 0, 0, 0.03);\n  border-radius: 8px;\n  position: relative;\n  overflow: hidden;\n  cursor: grab;\n  border: 1px solid transparent;\n  ${({ hasError }) => hasError && (`\n    border: 2px solid ${colors.error};\n  `)};\n  opacity: ${({ isDragging }) => isDragging ? 0 : 1};\n  transition: ${({ isDragging }) => isDragging && 'none !important'};\n\n  @media ${breakpoints.sm} {\n    border-radius: 16px;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    margin-top: 100%;\n  }\n`\n\nconst StImg = styled.img`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  margin: auto;\n  width: calc(100% - 64px);\n  min-width: 20px;\n  pointer-events: none;\n  user-select: none;\n  height: auto;\n\n  @media ${breakpoints.sm} {\n    min-width: 48px;\n    max-height: 85%;\n  }\n\n  @media ${breakpoints.md} {\n    min-width: 64px;\n    width: calc(100% - 128px);\n  }\n`\n\nconst LogoCard = ({ variant, id, hasError, onBegin, source, index, ...props }) => {\n  const [{ isDragging }, drag] = useDrag({\n    item: { type: ItemTypes.CARD, id, variant, source, index },\n    begin: onBegin,\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  })\n\n  return (\n    <StCard\n      data-variant={variant}\n      ref={drag}\n      hasError={hasError}\n      isDragging={isDragging}\n      {...props}\n    >\n      <StImg src={variantMapping[variant]} alt={variant} />\n    </StCard>\n  )\n}\n\nLogoCard.propTypes = {\n  variant: PropTypes.oneOf(['z', 'o', 'v', 'u']),\n  id: PropTypes.string,\n  hasError: PropTypes.bool,\n  onBegin: PropTypes.func\n}\n\nLogoCard.defaultProps = {\n  variant: 'z',\n  id: undefined,\n  hasError: false,\n  onBegin: () => {}\n}\n\nexport default React.memo(LogoCard)\n","export default __webpack_public_path__ + \"static/media/zoovu-z.045ec7e2.svg\";","export default __webpack_public_path__ + \"static/media/zoovu-o.7105c72a.svg\";","export default __webpack_public_path__ + \"static/media/zoovu-v.82f0d0a7.svg\";","export default __webpack_public_path__ + \"static/media/zoovu-u.ab636cad.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { Typography } from '../../../components'\nimport { breakpoints } from '../../../shared/variables'\nimport DropArea from '../components/DropArea'\nimport { map } from 'lodash'\nimport LogoCard from '../components/LogoCard'\n\nconst StRoot = styled.div`\n  user-select: none;\n`\nconst StArea = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 48px;\n\n  @media ${breakpoints.md} {\n    margin-top: 64px;\n  }\n\n  & > * {\n    width: 100%;\n    margin-right: 16px;\n\n    @media ${breakpoints.md} {\n      margin-right: 32px;\n    }\n\n    &:last-of-type {\n      margin-right: 0;\n    }\n  }\n`\nconst StSpan = styled.span`\n  opacity: 0.6;\n`\n\nconst GSDroppableArea = ({ data, handleDrop }) => {\n  return (\n    <StRoot>\n      <Typography color='gray'>...and drop them here to make the logo great <StSpan>again!</StSpan></Typography>\n      <StArea>\n        {map(data, ({ id, expected, dropped }, index) => (\n          <DropArea\n            key={id}\n            id={id}\n            handleDrop={handleDrop}\n            dropped={dropped}\n            expected={expected}\n            index={index}\n          >\n            {dropped && (\n              <LogoCard\n                id={dropped.id}\n                variant={dropped.variant}\n                hasError={expected !== dropped.variant}\n                source='droppableArea'\n                index={index}\n              />\n            )}\n          </DropArea>\n        ))}\n      </StArea>\n    </StRoot>\n  )\n}\n\nGSDroppableArea.propTypes = {\n  data: PropTypes.array\n}\n\nGSDroppableArea.defaultProps = {\n  data: []\n}\n\nexport default React.memo(GSDroppableArea)\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { breakpoints, colors, transition } from '../../../shared/variables'\nimport { Icon, Typography } from '../../../components'\nimport Context from '../../../context'\n\nconst StRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-bottom: 48px;\n\n  @media ${breakpoints.md} {\n    flex-direction: row;\n    margin-bottom: 80px;\n  }\n`\nconst StLeft = styled.span`\n  margin-bottom: 32px;\n\n  @media ${breakpoints.md} {\n    margin-bottom: 0;\n  }\n\n  & > :first-child {\n    margin-bottom: 16px;\n\n    @media ${breakpoints.md} {\n      margin-bottom: 40px;\n    }\n  }\n`\nconst StRight = styled.span`\n  @media ${breakpoints.md} {\n    text-align: right;\n  }\n\n  & > :first-child {\n    margin-bottom: 16px;\n\n    @media ${breakpoints.md} {\n      margin-bottom: 40px;\n    }\n  }\n`\nconst STScoreContainer = styled.div`\n  display: flex;\n  align-items: center;\n`\nconst StScore = styled.span`\n  ${transition('color', '3s')};\n  ${({ error }) => error && (`\n    ${transition('color', '0.2s')};\n    color: ${colors.error};\n  `)};\n`\nconst StIcon = styled(Icon)`\n  color: ${colors.secondary};\n  margin-right: 8px;\n`\n\nconst GSHeader = () => {\n  const { name, score, error } = useContext(Context)\n\n  return (\n    <StRoot id='game-screen'>\n      <StLeft>\n        <Typography variant='h1'>Good luck, {name}</Typography>\n        <Typography color='gray'>Pick up the right cards</Typography>\n      </StLeft>\n      <StRight>\n        <STScoreContainer>\n          <StIcon>schedule</StIcon>\n          <Typography variant='h2' color='primary'>\n            Your score: <StScore error={error} data-score={score}>{score}&nbsp;seconds</StScore>\n          </Typography>\n        </STScoreContainer>\n        <Typography variant='body2' color='gray'>\n          The faster the better!\n        </Typography>\n      </StRight>\n    </StRoot>\n  )\n}\n\nexport default React.memo(GSHeader)\n","import React, { useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport LogoCard from '../components/LogoCard'\nimport { map } from 'lodash'\nimport Context from '../../../context'\nimport { breakpoints } from '../../../shared/variables'\n\nconst StRoot = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 48px;\n\n  @media ${breakpoints.md} {\n    margin-bottom: 80px;\n  }\n\n  & > * {\n    width: 100%;\n    margin-right: 16px;\n\n    @media ${breakpoints.md} {\n      margin-right: 32px;\n    }\n\n    &:last-of-type {\n      margin-right: 0;\n    }\n  }\n`\nconst StPlaceholder = styled.div`\n  position: relative;\n  &::before {\n    content: '';\n    display: block;\n    margin-top: 100%;\n  }\n`\n\nconst GSPickupCards = ({ data }) => {\n  const { startGame } = useContext(Context)\n\n  return (\n    <StRoot>\n      {map(data, ({ id, variant }, i) => (\n        id && variant\n          ? <LogoCard\n              key={id}\n              id={id}\n              variant={variant}\n              onBegin={startGame}\n              source='pickupArea'\n            />\n          : <StPlaceholder key={i} />\n      ))}\n    </StRoot>\n  )\n}\n\nGSPickupCards.propTypes = {\n  data: PropTypes.array\n}\n\nGSPickupCards.defaultProps = {\n  data: []\n}\n\nexport default React.memo(GSPickupCards)\n","import React, { useState, useCallback, useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { breakpoints } from '../../shared/variables'\nimport { CardTypes, dropConfig } from './constants'\nimport GSDroppableArea from './sections/GSDroppableArea'\nimport GSHeader from './sections/GSHeader'\nimport GSPickupCards from './sections/GSPickupCards'\nimport { every, map, shuffle } from 'lodash'\nimport Context from '../../context'\n\nconst StRoot = styled.div`\n  padding: 32px 16px;\n  max-width: 1600px;\n  margin: auto;\n\n  @media ${breakpoints.md} {\n    padding: 72px;\n  }\n`\n\nconst GameScreen = () => {\n  const { addTimeOnError, endGame } = useContext(Context)\n  const [pickupCards, setPickupCards] = useState(shuffle(CardTypes))\n  const [dropAreas, setDropAreas] = useState(dropConfig)\n\n  const handleDrop = useCallback((droppedArea, droppedCard) => {\n    // add time on error\n    if (droppedCard.variant !== droppedArea.expected) addTimeOnError()\n\n    // remove card from pickupCards\n    setPickupCards(map(pickupCards, card => {\n      if (card.id !== droppedCard.id) return card\n      else return {}\n    }))\n\n    // add card to drop area\n    setDropAreas(map(dropAreas, area => {\n      // if source is droppalbeArea, switch cards\n      if (droppedCard.source === 'droppableArea' && area.dropped && area.dropped.id === droppedCard.id) {\n        return { ...area, dropped: droppedArea.dropped }\n      }\n\n      // otherwise just update order\n      if (area.id !== droppedArea.id) return area\n      return { ...area, dropped: droppedCard }\n    }))\n\n    // if (every(dropAreas, area => ))\n  }, [pickupCards, dropAreas, addTimeOnError])\n\n  // end game if every card is in place\n  useEffect(() => {\n    if (every(dropAreas, ({ expected, dropped }) => dropped && expected === dropped.variant)) {\n      endGame()\n    }\n  }, [dropAreas, endGame])\n\n  return (\n    <StRoot>\n      <GSHeader />\n      <GSPickupCards data={pickupCards} />\n      <GSDroppableArea data={dropAreas} handleDrop={handleDrop} />\n    </StRoot>\n  )\n}\n\nexport default React.memo(GameScreen)\n","import React, { useContext, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Button, Icon, Typography } from '../../components'\nimport Context from '../../context'\n\nlet resetTimeout = null\n\nconst StRoot = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 64px 16px;\n  min-height: 100%;\n`\nconst StContainer = styled.div`\n  text-align: center;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\nconst StButton = styled(Button)`\n  margin-top: 48px;\n`\n\nconst ResultScreen = () => {\n  const { name, score, resetGame } = useContext(Context)\n\n  useEffect(() => {\n    resetTimeout = setTimeout(resetGame, 10000)\n  }, [resetGame])\n\n  const onRestartNow = () => {\n    clearTimeout(resetTimeout)\n    resetGame()\n  }\n\n  return (\n    <StRoot id='result-screen'>\n      <StContainer>\n        <Typography color='gray' variant='h2'>\n          Good job, {name}!\n        </Typography>\n        <Typography color='primary' variant='h1' style={{ margin: '48px 0' }}>\n          Your score was: {score}&nbsp;seconds\n        </Typography>\n        <Typography color='gray' variant='body2'>\n          Restarting in 10&nbsp;seconds...\n        </Typography>\n        <StButton onClick={onRestartNow}>\n          Restart now <Icon>autorenew</Icon>\n        </StButton>\n      </StContainer>\n    </StRoot>\n  )\n}\n\nexport default ResultScreen\n","import React, { useContext } from 'react'\nimport Context from '../../context'\n\nimport WelcomeScreen from '../WelcomeScreen'\nimport GameScreen from '../GameScreen'\nimport ResultScreen from '../ResultScreen'\n\nconst ScreenHandler = () => {\n  const { name, gameOver } = useContext(Context)\n\n  if (!name) return <WelcomeScreen />\n  if (gameOver) return <ResultScreen />\n  return <GameScreen />\n}\n\nexport default ScreenHandler\n","export default __webpack_public_path__ + \"static/media/zoovu-bg.45feb868.svg\";","export default __webpack_public_path__ + \"static/media/Campton-Bold.17818a32.woff2\";","export default __webpack_public_path__ + \"static/media/Campton-Light.be9ac4c8.woff2\";","import React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { DndProvider } from 'react-dnd'\nimport { HTML5Backend } from 'react-dnd-html5-backend'\nimport { ContextProvider } from './context'\n\nimport { colors } from './shared/variables'\nimport ScreenHandler from './app/ScreenHandler'\n\nimport zoovuBg from './images/zoovu-bg.svg'\nimport CamptonBold from './fonts/Campton-Bold.woff2'\nimport CamptonLight from './fonts/Campton-Light.woff2'\n\nconst GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Campton';\n    src: url(${CamptonLight}) format('woff2'), url('./fonts/Campton-LightDEMO/font.woff') format('woff');\n    font-weight: 300;\n  }\n  @font-face {\n    font-family: 'Campton';\n    src: url(${CamptonBold}) format('woff2');\n    font-weight: 700;\n  }\n  html, body, div, span, h1, h2, h3, h4, h5, h6, p, a, header, footer {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    vertical-align: baseline;\n  }\n  button, html [type='button'], [type='reset'], [type='submit'] {\n    -webkit-appearance: button;\n    border: none;\n    background: none;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  a, button, span, div, i {\n    -webkit-tap-highlight-color: transparent;\n    outline: none;\n  }\n  a, button, i {\n    user-select: none;\n  }\n  html, body {\n    width: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    min-width: 320px;\n  }\n  body {\n    font-family: Campton, Helvetica, Arial, sans-serif;\n    background: linear-gradient(180deg, #FDFDFE 0%, #F2F4F7 100%);\n    overflow: hidden;\n    color: ${colors.dark};\n\n    &::before {\n      content: '';\n      position: absolute;\n      left: 0;\n      top: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      background: url(${zoovuBg}) no-repeat center;\n      background-size: cover;\n      opacity: 0.6;\n      z-index: -1;\n    }\n  }\n  html, body, #root {\n    height: 100%;\n  }\n\n  #root {\n    overflow-y: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n`\n\nfunction App () {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <ContextProvider>\n        <GlobalStyle />\n        <ScreenHandler />\n      </ContextProvider>\n    </DndProvider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}